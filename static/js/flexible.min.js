!(function(win, lib) { var doc = win.document; var docEl = doc.documentElement; var metaEl = doc.querySelector('meta[name="viewport"]'); var flexibleEl = doc.querySelector('meta[name="flexible"]'); var dpr = 0; var scale = 0; var tid; var flexible = lib.flexible || (lib.flexible = {}); if (metaEl) { var match = metaEl.getAttribute('content').match(/initial\-scale=([\d\.]+)/); match && (scale = parseFloat(match[1]), dpr = parseInt(1 / scale)) } else if (flexibleEl) { var content = flexibleEl.getAttribute('content'); if (content) { var initialDpr = content.match(/initial\-dpr=([\d\.]+)/); var maximumDpr = content.match(/maximum\-dpr=([\d\.]+)/); initialDpr && (dpr = parseFloat(initialDpr[1]), scale = parseFloat((1 / dpr).toFixed(2))), maximumDpr && (dpr = parseFloat(maximumDpr[1]), scale = parseFloat((1 / dpr).toFixed(2))) } } if (!dpr && !scale) { var isAndroid = win.navigator.appVersion.match(/android/gi); var isIPhone = win.navigator.appVersion.match(/iphone/gi); var devicePixelRatio = win.devicePixelRatio; scale = 1 / (dpr = isIPhone ? devicePixelRatio >= 3 && (!dpr || dpr >= 3) ? 3 : devicePixelRatio >= 2 && (!dpr || dpr >= 2) ? 2 : 1 : 1) } if (docEl.setAttribute('data-dpr', dpr), !metaEl) if ((metaEl = doc.createElement('meta')).setAttribute('name', 'viewport'), metaEl.setAttribute('content', 'initial-scale=' + scale + ', maximum-scale=' + scale + ', minimum-scale=' + scale + ', user-scalable=no'), docEl.firstElementChild)docEl.firstElementChild.appendChild(metaEl); else { var wrap = doc.createElement('div'); wrap.appendChild(metaEl), doc.write(wrap.innerHTML) } function refreshRem() { var width = docEl.getBoundingClientRect().width; width / dpr > 540 && (width = 540 * dpr); var rem = width / 10; docEl.style.fontSize = rem + 'px', flexible.rem = win.rem = rem }win.addEventListener('resize', function() { clearTimeout(tid), tid = setTimeout(refreshRem, 300) }, !1), win.addEventListener('pageshow', function(e) { e.persisted && (clearTimeout(tid), tid = setTimeout(refreshRem, 300)) }, !1), doc.readyState === 'complete' ? doc.body.style.fontSize = 12 * dpr + 'px' : doc.addEventListener('DOMContentLoaded', function(e) { doc.body.style.fontSize = 12 * dpr + 'px' }, !1), refreshRem(), flexible.dpr = win.dpr = dpr, flexible.refreshRem = refreshRem, flexible.rem2px = function(d) { var val = parseFloat(d) * this.rem; return typeof d === 'string' && d.match(/rem$/) && (val += 'px'), val }, flexible.px2rem = function(d) { var val = parseFloat(d) / this.rem; return typeof d === 'string' && d.match(/px$/) && (val += 'rem'), val } }(window, window.lib || (window.lib = {})))
